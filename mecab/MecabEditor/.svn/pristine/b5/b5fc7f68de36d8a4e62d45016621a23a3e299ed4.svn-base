using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MecabEditor
{
    public partial class frmMain : Form
    {
        private List<MSeed> lstMSeed = new List<MSeed>();
        private List<MSeed> lstAllMSeed = new List<MSeed>();
        private List<MSeed> lstMyMSeed = new List<MSeed>();
        
        public frmMain()
        {
            InitializeComponent();
        }

        //フォームを閉じる
        private void btnClose_Click(object sender, EventArgs e)
        {
            Close();
        }

        //ファイルを開く
        private void btnFile_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofdRead = new OpenFileDialog();
            ofdRead.Title = "ファイルを指定してください";
            if (ofdRead.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                String strFileName = ofdRead.FileName;
                if (!System.IO.File.Exists(@strFileName))
                {
                    MessageBox.Show("ファイルが存在しません");
                    return;
                }

                lblFilePath.Text = strFileName;

                if (!createCopusListFromFile(@strFileName))
                    return;
            }
        }

        //ファイルからコーパスのリストを作成する
        private Boolean createCopusListFromFile(String strFileName)
        {
            StreamReader strReader = null;
            Boolean bResult = false;

            int intEditMode = cmbEditMode.SelectedIndex;

            lstMSeed.Clear();

            try
            {
                strReader = new StreamReader(@strFileName);

                if (intEditMode == 1)
                {
                    if (!createCopusTotalDataList(strReader))
                    {
                        MessageBox.Show("コーパスの集計リストの作成に失敗しました");
                        return bResult;
                    }
                }
                else if (intEditMode == 0)
                {
                    if (!createCopusDataList(strReader))
                    {
                        MessageBox.Show("コーパスのリストの作成に失敗しました");
                        return bResult;
                    }
                }
            
                lstvwMain.Clear();
                lstvwMain.Columns.Add(XmlDatas.ListNames["HYOSO_TYPE"]);
                lstvwMain.Columns.Add(XmlDatas.ListNames["HINSHI"]);
                lstvwMain.Columns.Add(XmlDatas.ListNames["HINSHI_DETAIL_1"]);
                lstvwMain.Columns.Add(XmlDatas.ListNames["HINSHI_DETAIL_2"]);
                lstvwMain.Columns.Add(XmlDatas.ListNames["HINSHI_DETAIL_3"]);

                if (intEditMode == 0)
                {
                    lstvwMain.Columns.Add(XmlDatas.ListNames["KATSUYO_KEI"]);
                    lstvwMain.Columns.Add(XmlDatas.ListNames["KATSUYO_TYPE"]);
                    lstvwMain.Columns.Add(XmlDatas.ListNames["BASE_TYPE"]);
                    lstvwMain.Columns.Add(XmlDatas.ListNames["YOMI"]);
                    lstvwMain.Columns.Add(XmlDatas.ListNames["HATSUON"]);
                }
                else
                {
                    lstvwMain.Columns.Add(XmlDatas.ListNames["DATA_COUNT"]);
                }

                lstMSeed.ForEach(delegate(MSeed mSeedWork)
                {
                    if (intEditMode == 0)
                    {
                        String[] strLineWork = { mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_KEI"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_TYPE"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]].ToString() };
                        lstvwMain.Items.Add(new ListViewItem(strLineWork));
                    }
                    else
                    {
                        String[] strLineWork = { mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]].ToString(), mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]].ToString() };
                        lstvwMain.Items.Add(new ListViewItem(strLineWork));
                    }
                });

                bResult = true;
            }
            catch (IOException ioe)
            {
                MessageBox.Show(ioe.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                if (strReader != null)
                {
                    strReader.Close();
                    strReader.Dispose();
                }
            }

            return bResult;
        }

        //コーパスの集計データリストの作成
        private Boolean createCopusTotalDataList(StreamReader strReaderWork)
        {
            Boolean bResult = false;

            while (!strReaderWork.EndOfStream)
            {
                String strLine = strReaderWork.ReadLine();
                String[] strLineSplitTab = strLine.Split('\t');

                if (strLineSplitTab.Length > 1)
                {
                    String[] strLineSplitComma = strLineSplitTab[1].Split(',');

                    //既存のリストにないか検索する
                    Boolean bIsExist = false;
                    //if (intEditMode == 1)
                    //{
                    lstMSeed.ForEach(delegate(MSeed mSeedSearch)
                    {
                        if (mSeedSearch.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]].ToString().Equals(strLineSplitTab[0]) && mSeedSearch.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]].ToString().Equals(strLineSplitComma[0]))
                        {
                            bIsExist = true;
                            int intCountWork = int.Parse(mSeedSearch.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]].ToString());
                            intCountWork++;
                            mSeedSearch.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]] = intCountWork;
                        }
                    });
                    //}

                    if (!bIsExist)
                    {
                        MSeed mSeedWork = new MSeed();
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["SEED_NO"]] = 0;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]] = strLineSplitTab[0];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["LEFT_CONNECT_STATUS_NO"]] = 1000;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["RIGHT_CONNECT_STATUS_NO"]] = 1000;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["COST"]] = 100;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]] = strLineSplitComma[0];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]] = strLineSplitComma[1];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]] = strLineSplitComma[2];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]] = strLineSplitComma[3];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_KEI"]] = strLineSplitComma[4];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_TYPE"]] = strLineSplitComma[5];
                        //mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = String.Empty;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = strLineSplitComma[6];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]] = String.Empty;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]] = String.Empty;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["CREATED_AT"]] = DateTime.Now;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["UPDATED_AT"]] = DateTime.Now;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DELETE_FLAG"]] = 0;
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]] = 1;

                        //if (strLineSplitComma.Length > 7)
                        if (strLineSplitComma.Length > 8)
                        {
                            //mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = strLineSplitComma[6];
                            mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]] = strLineSplitComma[7];
                            mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]] = strLineSplitComma[8];
                        }

                        lstMSeed.Add(mSeedWork);
                    }
                }
            }

            bResult = true;

            return bResult;
        }

        //コーパスのデータリスト作成
        private Boolean createCopusDataList(StreamReader strReaderWork)
        {
            Boolean bResult = false;

            while (!strReaderWork.EndOfStream)
            {
                String strLine = strReaderWork.ReadLine();
                String[] strLineSplitTab = strLine.Split('\t');
                

                MSeed mSeedWork = new MSeed();
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["SEED_NO"]] = 0;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]] = strLineSplitTab[0];
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["LEFT_CONNECT_STATUS_NO"]] = -1;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["RIGHT_CONNECT_STATUS_NO"]] = -1;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["COST"]] = -1;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_KEI"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_TYPE"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]] = String.Empty;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["CREATED_AT"]] = DateTime.Now;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["UPDATED_AT"]] = DateTime.Now;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DELETE_FLAG"]] = 0;
                mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]] = 1;

                if (strLineSplitTab.Length > 1)
                {
                    String[] strLineSplitComma = strLineSplitTab[1].Split(',');

                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]] = strLineSplitComma[0];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]] = strLineSplitComma[1];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]] = strLineSplitComma[2];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]] = strLineSplitComma[3];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_KEI"]] = strLineSplitComma[4];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_TYPE"]] = strLineSplitComma[5];
                    mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = strLineSplitComma[6];

                    //if (strLineSplitComma.Length > 7)
                    if (strLineSplitComma.Length > 8)
                    {
                        //mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]] = strLineSplitComma[6];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]] = strLineSplitComma[7];
                        mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]] = strLineSplitComma[8];
                    }
                }

                lstMSeed.Add(mSeedWork);
            }

            bResult = true;

            return bResult;
        }

        //Form表示後の処理
        private void frmMain_Shown(object sender, EventArgs e)
        {
            cmbEditMode.Items.Clear();
            cmbEditMode.Items.Add(XmlDatas.ListNames["EDIT"]);
            cmbEditMode.Items.Add(XmlDatas.ListNames["TOTAL"]);
            cmbEditMode.DropDownStyle = ComboBoxStyle.DropDownList;
            cmbEditMode.SelectedIndex = 0;

            btnAdd.Enabled = true;
            btnEdit.Enabled = true;
            btnDel.Enabled = true;
        }

        //CSVファイルの取得
        private Boolean getCsvFiles()
        {
            Boolean bResult = false;
            StreamReader strrdr = null;

            try
            {
                String[] filePaths = Directory.GetFiles(XmlDatas.ListConsts["SEED_DIRECTORY_PATH"], "*.csv");
                for (int i = 0; i < filePaths.Length; i++)
                {
                    if (System.IO.File.Exists(@filePaths[i]))
                    {
                        strrdr = new StreamReader();
                    }
                }

                        bResult = true;
            }
            catch (IOException ioe)
            {
                MessageBox.Show(ioe.Message);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                if (strrdr != null)
                {
                    strrdr.Close();
                    strrdr.Dispose();
                }
            }

            return bResult;
        }


        //ファイル出力
        private void btnFileOutput_Click(object sender, EventArgs e)
        {
            StreamWriter strwtr = null;

            SaveFileDialog sfd = new SaveFileDialog();
            if (sfd.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                String strFileName = sfd.FileName;

                try
                {
                    strwtr = new StreamWriter(@strFileName, false, Encoding.UTF8);

                    if (cmbEditMode.SelectedIndex == 0)
                    {
                        lstMSeed.ForEach(delegate(MSeed mSeedWork)
                        {
                            String strOutputWork = mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]].ToString();
                            if (!mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]].ToString().Equals(String.Empty))
                            {
                                strOutputWork = strOutputWork + "\t" + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_KEI"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["KATSUYO_TYPE"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["BASE_TYPE"]].ToString();
                            }

                            if (!mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]].ToString().Equals(String.Empty))
                            {
                                strOutputWork = strOutputWork + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["YOMI"]].ToString() + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HATSUON"]].ToString();
                            }

                            strwtr.WriteLine(strOutputWork);
                        });

                        MessageBox.Show(String.Format(XmlDatas.ListMessages["INFORMATION_1"], XmlDatas.ListNames["COPUS_EDIT"]));
                    }
                    else
                    {
                        lstMSeed.ForEach(delegate(MSeed mSeedWork)
                        {
                            strwtr.WriteLine(mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HYOSO_TYPE"]] + "\t" + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI"]] + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_1"]] + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_2"]] + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["HINSHI_DETAIL_3"]] + "," + mSeedWork.DictionaryMembers[XmlDatas.ListItemNames["DATA_COUNT"]]);
                        });

                        MessageBox.Show(String.Format(XmlDatas.ListMessages["INFORMATION_1"], XmlDatas.ListNames["COPUS_COUNT"]));
                    }
                }
                catch (IOException ioe)
                {
                    MessageBox.Show(ioe.Message);
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
                finally
                {
                    if (strwtr != null)
                    {
                        strwtr.Close();
                        strwtr.Dispose();
                    }
                }
            }
        }

        //コーパスの編集と集計の切り替え
        private void cmbEditMode_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (cmbEditMode.SelectedIndex == 0)
            {
                btnAdd.Enabled = true;
                btnEdit.Enabled = true;
                btnDel.Enabled = true;
            }
            else
            {
                btnAdd.Enabled = false;
                btnEdit.Enabled = false;
                btnDel.Enabled = false;
            }

            if (lblFilePath.Text.Length > 0)
            {
                if (!createCopusListFromFile(@lblFilePath.Text))
                    return;
            }
        }

        //要素追加
        private void btnAdd_Click(object sender, EventArgs e)
        {

        }

        //要素編集
        private void btnEdit_Click(object sender, EventArgs e)
        {
            //選択チェック
            if (lstvwMain.SelectedItems.Count == 0)
            {
                MessageBox.Show(XmlDatas.ListMessages["ERROR_1"]);
                return;
            }
        }

        //要素削除
        private void btnDel_Click(object sender, EventArgs e)
        {
            //選択チェック
            if (lstvwMain.SelectedItems.Count == 0)
            {
                MessageBox.Show(XmlDatas.ListMessages["ERROR_1"]);
                return;
            }

            if (MessageBox.Show(XmlDatas.ListMessages["CONFIRM_1"], XmlDatas.ListNames["CONFIRM"], MessageBoxButtons.YesNo) == DialogResult.Yes)
            {
                int intSelectedCount = lstvwMain.SelectedIndices.Count;
                for (int i = intSelectedCount - 1; i >= 0; i--)
                {
                    int intSelectedIndex = lstvwMain.SelectedIndices[i];
                    lstMSeed.RemoveAt(intSelectedIndex);
                    lstvwMain.Items.RemoveAt(intSelectedIndex);
                }
            }
        }

        //getter, setter
        public List<MSeed> ListAllMSeed
        {
            get { return lstAllMSeed; }
            set { lstAllMSeed = value; }
        }

        public List<MSeed> ListMyMSeed
        {
            get { return lstMyMSeed; }
            set { lstMyMSeed = value; }
        }
    }
}
